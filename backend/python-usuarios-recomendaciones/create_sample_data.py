import sqlite3

def create_sample_data():
    """Crear datos de muestra en la base de datos SQLite"""
    try:
        # Conectar a la base de datos
        conn = sqlite3.connect('recomendaciones_dev.db')
        cursor = conn.cursor()
        
        # Verificar si la tabla existe
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table' AND name='destinos';")
        if not cursor.fetchone():
            print("Tabla destinos no existe, cre√°ndola...")
            cursor.execute('''
                CREATE TABLE destinos (
                    id_destino INTEGER PRIMARY KEY AUTOINCREMENT,
                    nombre VARCHAR(255),
                    descripcion VARCHAR(1000),
                    ubicacion VARCHAR(255),
                    ruta VARCHAR(500),
                    provincia VARCHAR(100),
                    ciudad VARCHAR(100),
                    categoria VARCHAR(100),
                    calificacion_promedio FLOAT DEFAULT 0.0,
                    activo BOOLEAN DEFAULT TRUE,
                    fecha_creacion DATETIME DEFAULT CURRENT_TIMESTAMP
                )
            ''')
        
        # Limpiar datos existentes
        cursor.execute("DELETE FROM destinos")
        
        # Insertar destinos de muestra
        destinos = [
            ("Quito Centro Hist√≥rico", "El centro hist√≥rico m√°s grande de Am√©rica", "Centro de Quito", "/quito-centro", "Pichincha", "Quito", "cultural", 4.8),
            ("Islas Gal√°pagos", "Para√≠so natural √∫nico en el mundo", "Islas Gal√°pagos", "/galapagos", "Gal√°pagos", "Puerto Ayora", "natural", 4.9),
            ("Ba√±os de Agua Santa", "Destino de aventura y relajaci√≥n", "Ba√±os", "/banos", "Tungurahua", "Ba√±os", "aventura", 4.7),
            ("Otavalo", "Mercado ind√≠gena m√°s famoso del Ecuador", "Otavalo", "/otavalo", "Imbabura", "Otavalo", "cultural", 4.6),
            ("Monta√±ita", "Playa para surf y vida nocturna", "Monta√±ita", "/montanita", "Santa Elena", "Monta√±ita", "playa", 4.4)
        ]
        
        for destino in destinos:
            cursor.execute('''
                INSERT INTO destinos (nombre, descripcion, ubicacion, ruta, provincia, ciudad, categoria, calificacion_promedio, activo)
                VALUES (?, ?, ?, ?, ?, ?, ?, ?, TRUE)
            ''', destino)
        
        conn.commit()
        print(f"‚úÖ Se insertaron {len(destinos)} destinos correctamente")
        
        # Verificar los datos
        cursor.execute("SELECT COUNT(*) FROM destinos")
        count = cursor.fetchone()[0]
        print(f"üìä Total de destinos en la base: {count}")
        
        cursor.execute("SELECT id_destino, nombre, ciudad, categoria FROM destinos LIMIT 3")
        sample = cursor.fetchall()
        print("üìç Muestra de destinos:")
        for row in sample:
            print(f"  - {row[1]} ({row[2]}, {row[3]})")
            
    except Exception as e:
        print(f"‚ùå Error: {e}")
    finally:
        conn.close()

if __name__ == "__main__":
    create_sample_data()